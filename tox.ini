[tox]
envlist = py36-tests
skipsdist = true
minversion = 3.8.0
requires =
  tox-pip-extensions
  tox-pyenv
  tox-envfile
  tox-run-command
tox_pip_extensions_ext_venv_update = true
tox_pyenv_fallback = false

[testenv]
skip_install = true
sitepackages = {env:SITE_PACKAGES:false}
setenv = dev: PYTHONPATH = .
passenv =
    HOME
    package: BUILD
deps =
    {tests,lint}: .[tests]
    lint: pylint
    lint: pydocstyle
    {checkformatting,format}: black
    {checkformatting,format}: isort[requirements]
    coverage: coverage
    {package,release,publish}: twine
    {package,release,publish}: wheel
    {lint,replay-cookiecutter}: cookiecutter
    release: packaging
whitelist_externals =
    {package,release}: rm
    release: sh
    release: git
commands =
    tests: coverage run -m pytest tests

    lint: pydocstyle --explain src
    lint: pydocstyle --config tests/.pydocstyle --explain tests
    lint: pylint {posargs:src bin}
    lint: pylint --rcfile=tests/.pylintrc tests

    format: black {posargs:src tests bin}
    format: isort --recursive --atomic .

    checkformatting: black --check {posargs:src tests bin}
    checkformatting: isort --recursive --quiet --check-only .

    coverage: -coverage combine
    coverage: coverage report

    package: rm -rf dist src/*.egg-info
    package: python setup.py bdist_wheel sdist
    package: twine check dist/*

    release: rm -rf dist src/*.egg-info
    release: sh -c "BUILD=`python bin/next_version.py` python setup.py bdist_wheel sdist"
    release: twine check dist/*
    release: sh -c "git tag -a `python bin/next_version.py`"
    release: git push --follow-tags

    publish: twine check dist/*
    publish: twine upload dist/*

    replay-cookiecutter: python bin/replay_cookie_cutter.py --config .cookiecutter.json --output-directory .
