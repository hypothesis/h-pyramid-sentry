[tox]
envlist = tests
skipsdist = true
minversion = 3.8.0
requires =
  tox-pip-sync
  tox-pyenv
  tox-envfile
  tox-run-command
tox_pyenv_fallback = false

[testenv]
skip_install = true
sitepackages = {env:SITE_PACKAGES:false}
setenv = dev: PYTHONPATH = .
passenv =
    HOME
    EXTRA_DEPS
    dist: BUILD
deps =
    {tests,lint}: -e .[tests]
    lint: pylint
    lint: pydocstyle
    {checkformatting,format}: black
    {checkformatting,format}: isort[requirements]
    coverage: coverage
    {lint,release,initialrelease}: packaging
    {dist,initialrelease}: twine
    {dist,initialrelease}: wheel
    {env:EXTRA_DEPS:}
whitelist_externals =
    hdev
    release: {toxinidir}/bin/check_that_git_working_tree_is_clean.sh
    {dist,initialrelease}: rm
    {release,initialrelease}: sh
    {release,initialrelease}: git
commands =
    tests: hdev config --if tool.hdev.tox.test_extras --run --template "pip install --quiet --use-feature=in-tree-build \{0\}"
    tests: coverage run -m pytest tests

    lint: pydocstyle --explain src
    lint: pydocstyle --config tests/.pydocstyle --explain tests
    lint: pylint {posargs:src bin}
    lint: pylint --rcfile=tests/.pylintrc tests

    format: black {posargs:src tests bin}
    format: isort --atomic .

    checkformatting: black --check {posargs:src tests bin}
    checkformatting: isort --quiet --check-only .

    coverage: -coverage combine
    coverage: coverage report

    {release,initialrelease}: {toxinidir}/bin/check_that_git_working_tree_is_clean.sh
    {dist,initialrelease}: rm -rf dist src/*.egg-info
    initialrelease: sh -c "BUILD=`python bin/next_version.py` python setup.py bdist_wheel sdist"
    dist: python setup.py bdist_wheel sdist
    {dist,initialrelease}: twine check dist/*
    {release,initialrelease}: sh -c "git tag -a `python bin/next_version.py`"
    {release,initialrelease}: git push git@github.com:hypothesis/h-pyramid-sentry.git --follow-tags
